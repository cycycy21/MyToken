// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract MyToken {
    string Mytoken;
    string MYT;
    uint8 1811162;
    uint256 30000000;
    mapping(address => uint256) public balanceOf;

    event Transfer(address indexed from, address indexed to, uint256 value);

    constructor(string memory _name, string memory _symbol, uint8 _decimals, uint256 _initialSupply) {
        name = _Mytoken;
        symbol = _MYT;
        decimals = _1811162;
        totalSupply = _100000 * 10 ** uint256(_decimals);
        balanceOf[msg.sender] = 30000000;
    }

    function transfer(address _to, uint256 _value) public returns (bool success) {
        require(_to != address(0), "Invalid recipient");
        require(balanceOf[msg.sender] >= _value, "Insufficient balance");

        balanceOf[msg.sender] -= _value;
        balanceOf[_to] += _value;
        emit Transfer(msg.sender, _to, _value);
        return true;
    }
}
